932c932
< optimization problem, \red{and in this section we will provide a concise overview of the underlying theory, loosely following reference ~\cite{SNOPT} which provides a much more in-depth description. We note that the adjoint formulation described in our paper may also be used in conjunction with other optimization packages.} \SNOPT{} uses a sparse sequential quadratic
---
> optimization problem~\cite{SNOPT}. \SNOPT{} uses a sparse sequential quadratic
936,937c936
< subproblems are solved using a reduced-Hessian
< %an inertia-controlling
---
> subproblems are solved using an inertia-controlling reduced-Hessian
960c959,962
< nonlinear program (NP). This discussion follows~\cite{SNOPT}. \red{As will be discussed in detail in Section~\ref{sec:constr-opt}, all realistic recovery optimization problems involve bound constraints on the inputs, and often several other linear or nonlinear equality or inequality constraints, which together constitute a so-called general nonlinear program (GNP) . All features described in this section are readily specialized to the GNP discussed in Section~\ref{sec:constr-opt}}. Here we take the problem to be
---
> nonlinear program (NP). This discussion follows~\cite{SNOPT}. All features described here are readily 
> specialized to general inequality constraints appearing in the 
> definition of the general nonlinear program (GNP) discussed in 
> Section~\ref{sec:constr-opt}. In this section we take the problem to be
964c966
< where $\u \in \mathbb R^n$, $\c \in \mathbb R^m$, \red{while the objective} function $f(\u)$ and \red{the constraints} $c_i(\u), \; i=1,2,\ldots,m$
---
> where $\u \in \mathbb R^n$, $\c \in \mathbb R^m$, and the functions $f(\u)$ and $c_i(\u), \; i=1,2,\ldots,m$
966,969c968
< by the vector 
< \red{$ \grad f(\u)$}, 
< %$\g(\u)$
< and the gradients of each element of $\c$ form
---
> by the vector $\g(\u)$, and the gradients of each element of $\c$ form
972,973c971,972
<  An SQP method obtains search directions (for the primal $\u$ and dual variables $\bpi$) from \red{an iterative} sequence of QP subproblems.  
<  Each QP subproblem\red{, in turn, iteratively} minimizes a convex quadratic
---
>  An SQP method obtains search directions (for the primal $\u$ and dual variables $\bpi$) from a sequence of QP subproblems.  
>  Each QP subproblem minimizes a convex quadratic
985c984
< subject to linearized constraints. \red{In this formulation $k$ is the SQP (major) iteration counter, and $\bpi$ are Lagrangian multipliers to adjoin $\dL$ to $f$.} 
---
> subject to linearized constraints.  
989c988
<         \grad\Lscr(\u,\u_k,\bpi_k) &=& \red{\grad f(\u)} - (\J(\u) - \Jk)\T \bpi_k, \\[3pt]
---
>         \grad\Lscr(\u,\u_k,\bpi_k) &=& \g(\u) - (\J(\u) - \Jk)\T \bpi_k, \\[3pt]
995c994
< At $\u = \u_k$, \red{i.e. after convergence of the inner iterations,} the modified Lagrangian has the same function and
---
> At $\u = \u_k$, the modified Lagrangian has the same function and
999c998
<      \grad \Lscr(\u_k,\u_k,\bpi_k) =\red{ \grad \fk}.
---
>      \grad \Lscr(\u_k,\u_k,\bpi_k) = \gk.
1011c1010
< where $\rho$ \red{and $\s$ are vectors} of penalty parameters \red{and slack variables respectively}, 
---
> where $\rho$ is a vector of penalty parameters,
1015c1014
< \red{In summary, the} basic structure of an SQP method involves major and
---
>  The basic structure of an SQP method involves major and
1018,1021c1017,1020
< At each \red{major} iterate a \red{minor iterative} QP subproblem is \red{solved} to generate a search direction
< towards the next iterate $(\u\kp1,\bpi\kp1)$.
< %Solving such a subproblem is itself an iterative procedure, and the minor iterations of an
< %SQP method are the iterations of the QP method.
---
> At each iterate a QP subproblem is used to generate a search direction
> towards the next iterate $(\u\kp1,\bpi\kp1)$. Solving such a subproblem
> is itself an iterative procedure, and the minor iterations of an
> SQP method are the iterations of the QP method.
1030c1029
< control problem for \red{recovery} optimization. Brouwer and 
---
> control problem for production optimization. Brouwer and 
1035c1034
<  Kraaijevanger~\cite{Kraaijevanger}, Sarma~\cite{Pallav:2006, Pallav:2008} \red{, Suwartadi [xxx] and Chen [xxx]}  
---
>  Kraaijevanger~\cite{Kraaijevanger} and Sarma~\cite{Pallav:2006, Pallav:2008} 
1102c1101
< large), \SNOPT{} \red{reverts to a technique known as 'elastic programming' to solve the problem}
---
> large), \SNOPT{} solves the problem
1111c1110,1111
< \red{where $\e$ is a vector of ones and $\v$ and $\w$ are 'elastic variables' which allow the constraints to stretch in directions that increase the size of the feasible region. The resistance to stretching is obtained by minimizing the composite objective function $f(\u) + \gamma \, \e^T(\v + \w)$, where the} penalty parameter $\gamma$ ($\gamma \ge 0$) may take a
---
> where $f(\u) + \gamma \, \e^T(\v + \w)$ is called a composite objective function
> and the penalty parameter $\gamma$ ($\gamma \ge 0$) may take a
1129c1129
< e.g.,~\cite{Pallav:2006,Jansen:2011} \red{Drosos, at this point please add references to Suwartadi (2012) and Chen (2012)} for detailed discussion. 
---
> e.g.,~\cite{Brouwer:2004,Pallav:2006,Pallav:2008,Jansen:2011} for detailed discussion. 
1131,1133c1131,1133
< This means that the vector $\c(\u)$ in (GNP) can be of dimension \red{$O(N_w N)$}, where $N$ is the number of time steps and $N_w$ is the number of wells. Computing the gradients
< for each of the entries of $\c(\u)$, which is required by SNOPT, \red{will require $N$ adjoint simulations and thus, in total, the solution of $O(N_w N^2 )$ linear systems of equations in addition to each forward simulation, which may be
< computationally intractable for realistically-sized problems.}
---
> This means that the vector $\c(\u)$ in (GNP) can be of dimension $O(N^2N_w)$, where $N$ is the number of time steps and $N_w$ is the number of wells. Computing the gradients
> for each of the entries of $\c(\u)$, which is required by SNOPT, may be
> computationally intractable using this type of `direct' procedure.
1159c1159
< function, specifically \red{one} suggested by~\cite{Bertsekas}:
---
> function, specifically that suggested by~\cite{Bertsekas}:
1344,1345c1344
< In the first example we maximize cumulative oil recovery under CO$_2$ injection. The two-dimensional geological model is depicted in Fig.~\ref{fig:PImodelPermeabilityMapAndWells}. A $\Pi$-shaped region is located at the center of a homogeneous reservoir. The model is discretized on a grid of dimensions $80\times80$. The permeability in most of the domain (red cells) is set to 4000~mD, while the permeability for the blue cells that comprise the $\Pi$-shaped region is set to $10^{-4}$~mD. \red{(In all our examples we describe the permeability with a diagonal tensor: $\tens{K} = \it{diag}(\tens{k}_x, \tens{k}_y, \tens{k}_z)$; here, in addition, we choose the permeability to be uniform.)}
<  Four injection wells are placed at the corners of the model, and the single production well is located inside the $\Pi$-shaped region. The model includes a total of four components (three hydrocarbon  components plus CO$_2$), as specified in Table~\ref{table:fluidForPImodel}. Further details on the reservoir model are provided in Table~\ref{table:PI}.
---
> In the first example we maximize cumulative oil recovery under CO$_2$ injection. The two-dimensional geological model is depicted in Fig.~\ref{fig:PImodelPermeabilityMapAndWells}. A $\Pi$-shaped region is located at the center of a homogeneous reservoir. The model is discretized on a grid of dimensions $80\times80$. The permeability in most of the domain (red cells) is set to 4000~mD, while the permeability for the blue cells that comprise the $\Pi$-shaped region is set to $10^{-4}$~mD. Four injection wells are placed at the corners of the model, and the single production well is located inside the $\Pi$-shaped region. The model includes a total of four components (three hydrocarbon  components plus CO$_2$), as specified in Table~\ref{table:fluidForPImodel}. Further details on the reservoir model are provided in Table~\ref{table:PI}.
1475c1474
<      \caption{Injection wells (blue) and production well (red) for Example~1. Background shows \red{$\tens{k}_x$ ($ \tens{k}_x = \tens{k}_y$)}.}
---
>      \caption{Injection wells (blue) and production well (red) for Example~1. Background shows $\tens{K}_x$ ($ \tens{K}_x = \tens{K}_y$).}
1793c1792
<      \caption{Injection wells (blue) and production wells (red) for Example 2. Background shows \red{$\log \tens{k}_x$ ($ \tens{k}_x = \tens{k}_y$).}}
---
>      \caption{Injection wells (blue) and production wells (red) for Example 2. Background shows $\log \tens{K}_x$ ($ \tens{K}_x = \tens{K}_y$).}
1896c1895
< the $x$-component of permeability \red{(here $\tens{k}_x = \tens{k}_y = 10\tens{k}_z$)}, along with the
---
> the $x$-component of permeability (here $\tens{K}_x = \tens{K}_y = 10\tens{K}_z$), along with the
1912c1911
<      \caption{Reservoir model and wells for Example 3 (from \cite{VanEssen}). Background shows \red{$\log \tens{k}_x$.}}
---
>      \caption{Reservoir model and wells for Example 3 (from \cite{VanEssen}). Background shows $\log \tens{K}_x$.}
2328,2329d2326
< \red{Chen, C., Li, G. and Reynolds, A.C., 2012: Robust constrained optimization of short- and long-term net present value for closed
< -loop reservoir management. SPE Journal 17 (3) 849-864}
2331d2327
< \red{Suwartadi, E., Krogstad, S. & Foss, B., 2012: Nonlinear output constraints handling for production optimization of oil reservoirs. Computational Geosciences 16, 499-517}
2341,2342d2336
< 
< 
